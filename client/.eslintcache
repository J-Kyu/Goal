[{"/home/kyu/Desktop/Goal/client/src/index.js":"1","/home/kyu/Desktop/Goal/client/src/reportWebVitals.js":"2","/home/kyu/Desktop/Goal/client/src/App.js":"3","/home/kyu/Desktop/Goal/client/src/components/views/LandingPage/LandngPage.js":"4","/home/kyu/Desktop/Goal/client/src/_reducers/index.js":"5","/home/kyu/Desktop/Goal/client/src/components/views/Card/ExerciseCard.js":"6","/home/kyu/Desktop/Goal/client/src/components/views/Card/AlgorithmContent.js":"7","/home/kyu/Desktop/Goal/client/src/components/views/Card/WPAlgo.js":"8"},{"size":1004,"mtime":1609675278051,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609419959040,"results":"11","hashOfConfig":"10"},{"size":1298,"mtime":1610152976527,"results":"12","hashOfConfig":"10"},{"size":1101,"mtime":1611783514192,"results":"13","hashOfConfig":"10"},{"size":197,"mtime":1609667939362,"results":"14","hashOfConfig":"10"},{"size":642,"mtime":1611783445028,"results":"15","hashOfConfig":"10"},{"size":1702,"mtime":1611059281889,"results":"16","hashOfConfig":"10"},{"size":390,"mtime":1611783597112,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"z2rkta",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kyu/Desktop/Goal/client/src/index.js",[],["38","39"],"/home/kyu/Desktop/Goal/client/src/reportWebVitals.js",[],"/home/kyu/Desktop/Goal/client/src/App.js",["40","41"],"import logo from './logo.svg';\nimport './App.css';\n\nimport LandingPage from \"./components/views/LandingPage/LandngPage\"\n\n//React-Router-DOM\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        {/* <ul>\n          <li>\n            <Link to=\"/\">Landing Page</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul> */}\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage}/>\n          <Route path=\"/about\" component = {About}/>\n          <Route path=\"/dashboard\" component = { Dashboard }/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  return (\n    <div>\n      <h2>Dashboard</h2>\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","/home/kyu/Desktop/Goal/client/src/components/views/LandingPage/LandngPage.js",["42"],"/home/kyu/Desktop/Goal/client/src/_reducers/index.js",[],"/home/kyu/Desktop/Goal/client/src/components/views/Card/ExerciseCard.js",["43","44"],"import { Typography } from 'antd'\nimport React from 'react'\nimport AlgorithmContent from './AlgorithmContent';\nimport WPAlgo from \"./WPAlgo\"\n\nconst { Title } = Typography;\n\n//set title as state, and get title from parent....\n\n\nfunction ExerciseCard() {\n    return (\n        <div style={{ maxWidth: \"300px\", textAlign: 'center' ,marginBottom: '0rem', border: '3px solid black', borderRadius: \"3rem\", borderStyle: 'dotted' }}>\n            <Title level={3}>Titlle </Title>\n            <div style={{ margin: \"10px\", maxWidth: '1000px', textAlign: 'center'}}>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default ExerciseCard","/home/kyu/Desktop/Goal/client/src/components/views/Card/AlgorithmContent.js",["45"],"import React, { useEffect, useState } from 'react';\nimport { Button, Space, Col, Row} from 'antd';\nimport axios from 'axios'\n\n\n\nfunction AlgorithmContent() {\n\n    const [algoList, setAlgoList] = useState([]);\n\n    //use router to load data from Mongo DB\n    useEffect(() => {\n        axios.get('/api/GetNotDoneAlgoList')\n        .then(response => {\n            if(response.data.success){\n                console.log(response.data);\n                setAlgoList(response.data.algoList)\n            }\n            else{\n                alert(\"Failed loading Algo List\")\n                // console.log(response.data)\n            }\n\n        })        \n    }, [])\n\n    //button function\n    function ActionButton(id,e){\n            e.preventDefault();\n            console.log(id)\n\n            //chang isDone to Done\n            axios({\n                method: 'put',\n                url: '/api/confirmAlgoProb/',\n                data:{\n                    id: id\n                }\n            })\n            //add today's date\n            //weekly goal update \n    }\n\n\n    //generate list of algo lines\n    const renderLines = algoList.map((algo,index)=>{\n      \n        return<Row gutter={4} key={algo._id}>\n                <div style={{ margin:\"5px\" }}>\n                <Space>\n                    <Button type=\"primary\" onClick={(e)=>ActionButton(algo._id,e)}>Confirm</Button>\n                    <a href={algo.link}>{algo.title}</a>\n                    <span>{algo.level}</span>\n                </Space>\n                </div>\n            </Row>\n    })\n\n\n    //render page\n    return (\n        <div style={{width:\"100%\" }}>\n            {renderLines}\n        </div>\n    )\n}\n\nexport default AlgorithmContent","/home/kyu/Desktop/Goal/client/src/components/views/Card/WPAlgo.js",["46","47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":12},{"ruleId":"53","severity":1,"message":"57","line":11,"column":3,"nodeType":"55","messageId":"56","endLine":11,"endColumn":7},{"ruleId":"53","severity":1,"message":"58","line":14,"column":12,"nodeType":"55","messageId":"56","endLine":14,"endColumn":16},{"ruleId":"53","severity":1,"message":"59","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":24},{"ruleId":"53","severity":1,"message":"60","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":14},{"ruleId":"53","severity":1,"message":"61","line":2,"column":25,"nodeType":"55","messageId":"56","endLine":2,"endColumn":28},{"ruleId":"53","severity":1,"message":"62","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":13},{"ruleId":"53","severity":1,"message":"63","line":9,"column":8,"nodeType":"55","messageId":"56","endLine":9,"endColumn":20},{"ruleId":"53","severity":1,"message":"64","line":12,"column":9,"nodeType":"55","messageId":"56","endLine":12,"endColumn":14},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'year' is assigned a value but never used.","'AlgorithmContent' is defined but never used.","'WPAlgo' is defined but never used.","'Col' is defined but never used.","'axios' is defined but never used.","'ExerciseCard' is defined but never used.","'Title' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]